#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp J &kp J &kp K &kp K &kp RET>;
            label = "NEW_MACRO";
        };

        new_macro2: new_macro2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp TAB &kp RG(X) &kp U &kp S>;
            label = "NEW_MACRO2";
            wait-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        LAYER0 {
            display-name = "LAYER0";
            bindings = <
&kp ESC       &kp N1    &kp N2     &kp N3       &kp N4     &kp N5      &mmv MOVE_UP     &kp N6   &kp N7      &kp N8     &kp N9     &kp N0         &kp MINUS
&kp LG(L)     &kp Q     &kp W      &kp E        &kp R      &kp T       &mmv MOVE_DOWN   &kp Y    &kp U       &kp I      &kp O      &kp P          &kp LBKT
&kp SPACE     &kp A     &kp S      &kp D        &kp F      &kp G       &mmv MOVE_LEFT   &kp H    &kp J       &kp K      &kp L      &kp SEMI       &kp APOS
&lt 1 DELETE  &kp Z     &kp X      &kp C        &kp V      &kp B       &mmv MOVE_RIGHT  &kp N    &kp M       &kp COMMA  &kp DOT    &kp FSLH       &kp RIGHT_SHIFT
&kp C_MUTE    &kp LALT  &kp LCTRL  &lt 2 SPACE  &kp LSHFT  &kp CAPS    &mkp LCLK        &kp TAB  &kp RSHIFT  &kp BSPC   &kp ENTER  &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        layer_1 {
            bindings = <
&kp F1           &kp F2           &kp F3           &kp F4           &kp F5           &kp F6             &mmv MOVE_UP     &kp F7            &kp F8             &kp F9        &kp F10  &kp F11           &kp F21
&new_macro       &rgb_ug RGB_SPI  &bt BT_SEL 0     &bt BT_SEL 1     &trans           &bt BT_CLR         &mmv MOVE_DOWN   &ext_power EP_ON  &ext_power EP_TOG  &kp NUMBER_3  &trans   &kp MINUS         &kp EQUAL
&rgb_ug RGB_TOG  &rgb_ug RGB_SPD  &mkp LCLK        &mkp MCLK        &mkp RCLK        &trans             &mmv MOVE_LEFT   &kp NUMBER_4      &kp NUMBER_5       &kp NUMBER_6  &trans   &kp LEFT_BRACKET  &kp BSLH
&trans           &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_EFF    &mmv MOVE_RIGHT  &kp NUMBER_7      &kp NUMBER_8       &kp NUMBER_9  &trans   &kp F12           &trans
&kp C_MUTE       &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans           &trans           &trans             &mkp LCLK        &trans            &kp RSHIFT         &kp NUMBER_0  &kp DOT  &kp RIGHT_GUI
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            display-name = "layer2";
            bindings = <
&kp F1       &kp F2  &kp F3          &kp F4          &kp F5           &kp F6       &kp UP_ARROW     &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&new_macro2  &trans  &trans          &kp UP_ARROW    &trans           &trans       &kp DOWN_ARROW   &kp N1  &kp N2  &kp N3  &trans   &trans   &kp EQUAL
&mkp MB2     &kp A   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp TILDE    &kp LEFT_ARROW   &kp N4  &kp N5  &kp N6  &trans   &trans   &kp BSLH
&trans       &kp Z   &kp X           &kp C           &kp V            &kp B        &kp RIGHT_ARROW  &kp N7  &kp N8  &kp N9  &trans   &trans   &kp RSHFT
&kp C_MUTE   &trans  &trans          &trans          &trans           &trans       &kp ENTER        &trans  &trans  &kp N0  &kp DOT  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };
    };
};
